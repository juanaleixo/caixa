/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import model.Usuario;
import model.Conta;
import data.ContaData;
import data.dbinfofile;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author juan
 */
public class JFConta extends javax.swing.JFrame {

    Usuario usuario = new Usuario();
    private ContaData DAO;
    Conta conta = new Conta();
    private ArrayList<Conta> listaExtrato;
    private dbinfofile file;
    /**
     * Creates new form JFConta
     */
    public JFConta(Usuario usuario, int contas) throws Exception {
        initComponents();
        DAO = new ContaData();
        conta.setConta(contas);
        DAO.atualizar(conta);
        file = new dbinfofile();
        jTUser.setText(usuario.getNome());
        jTConta.setText(Integer.toString(contas));
        jTSaldo.setText("" + conta.getSaldo());
        CarregaComboBoxTodos();
        CarregaTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTConta = new javax.swing.JTextField();
        jTSaldo = new javax.swing.JTextField();
        jTUser = new javax.swing.JTextField();
        jBTransferir = new javax.swing.JButton();
        jCContas = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jTValorTransferir = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTExtrato = new javax.swing.JTable();
        jBDepositar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Contas");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Conta");

        jLabel2.setText("Saldo");

        jLabel3.setText("UsuÃ¡rio");

        jTConta.setEditable(false);
        jTConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTContaActionPerformed(evt);
            }
        });

        jTSaldo.setEditable(false);
        jTSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTSaldoActionPerformed(evt);
            }
        });

        jTUser.setEditable(false);
        jTUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTUserActionPerformed(evt);
            }
        });

        jBTransferir.setText("Transferir");
        jBTransferir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTransferirActionPerformed(evt);
            }
        });

        jCContas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCContasActionPerformed(evt);
            }
        });

        jLabel4.setText("Valor para Transferir/Depositar ");

        jTValorTransferir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTValorTransferirActionPerformed(evt);
            }
        });

        jLabel5.setText("Extrato:");

        jTExtrato.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "De", "Para", "Valor", "Data", "Hora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTExtrato);
        if (jTExtrato.getColumnModel().getColumnCount() > 0) {
            jTExtrato.getColumnModel().getColumn(0).setResizable(false);
            jTExtrato.getColumnModel().getColumn(0).setPreferredWidth(1);
            jTExtrato.getColumnModel().getColumn(1).setResizable(false);
            jTExtrato.getColumnModel().getColumn(1).setPreferredWidth(2);
            jTExtrato.getColumnModel().getColumn(2).setResizable(false);
            jTExtrato.getColumnModel().getColumn(3).setResizable(false);
            jTExtrato.getColumnModel().getColumn(4).setResizable(false);
        }

        jBDepositar.setText("Depositar");
        jBDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDepositarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel3)
                        .addGap(2, 2, 2)
                        .addComponent(jTUser, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTConta, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBDepositar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBTransferir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCContas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(6, 6, 6)
                                .addComponent(jTValorTransferir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTConta, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jTSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jTUser, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37)
                .addComponent(jLabel5)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel4))
                    .addComponent(jTValorTransferir, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBTransferir)
                    .addComponent(jBDepositar)
                    .addComponent(jCContas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTContaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTContaActionPerformed

    private void jTSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTSaldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTSaldoActionPerformed

    private void jTUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTUserActionPerformed

    private void jCContasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCContasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCContasActionPerformed

    private void jTValorTransferirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTValorTransferirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTValorTransferirActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            this.DAO.getConexao().close();
        } catch (SQLException ex) {
            Logger.getLogger(JFCadastrarUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jBTransferirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTransferirActionPerformed
        try {
            String conta_dest = (String) jCContas.getSelectedItem();
            int conta_destino = Integer.parseInt(conta_dest);
            if(Float.parseFloat(jTValorTransferir.getText())<0){
                JOptionPane.showMessageDialog(this, "O valor nÃ£o pode ser negativo!", "Espertinho", JOptionPane.ERROR_MESSAGE);
            }else if (conta.getSaldo() < (Float.parseFloat(jTValorTransferir.getText()))) {
                JOptionPane.showMessageDialog(this, "Sem Saldo", "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                if (DAO.transacao(conta, Float.parseFloat(jTValorTransferir.getText()), conta_destino)) {
                    JOptionPane.showMessageDialog(this, "Valor Transferido com Sucesso!", "TransferÃªncia", JOptionPane.INFORMATION_MESSAGE);
                    CarregaTabela();
            /*atualizar saldo origem, retirar valor*/ 
            DAO.atualizarSaldo(conta.getConta(), Float.parseFloat(jTValorTransferir.getText())*-1);
            
            /*atualizar saldo destino, colocar valor*/ 
            DAO.atualizarSaldo(conta_destino, Float.parseFloat(jTValorTransferir.getText()));
            DAO.atualizar(conta);
            jTSaldo.setText("" + conta.getSaldo());
                }
                }
            
        } catch (Exception ex) {
            Logger.getLogger(JFConta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBTransferirActionPerformed

    private void jBDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDepositarActionPerformed
            try {
            String conta_dest = (String) jCContas.getSelectedItem();
            if(Float.parseFloat(jTValorTransferir.getText())<0){
                JOptionPane.showMessageDialog(this, "O valor nÃ£o pode ser negativo!", "Espertinho", JOptionPane.ERROR_MESSAGE);
            }else if (DAO.deposito(conta, Float.parseFloat(jTValorTransferir.getText()))) {
                    JOptionPane.showMessageDialog(this, "Valor Depositado com Sucesso!", "DepÃ³sito", JOptionPane.INFORMATION_MESSAGE);
                    CarregaTabela();
            /*atualizar saldo depÃ³sito*/
            DAO.atualizarSaldo(conta.getConta(), Float.parseFloat(jTValorTransferir.getText()));
            DAO.atualizar(conta);
            jTSaldo.setText("" + conta.getSaldo());
            
                }
            
        } catch (Exception ex) {
            Logger.getLogger(JFConta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBDepositarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //           new JFConta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBDepositar;
    private javax.swing.JButton jBTransferir;
    private javax.swing.JComboBox<String> jCContas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTConta;
    private javax.swing.JTable jTExtrato;
    private javax.swing.JTextField jTSaldo;
    private javax.swing.JTextField jTUser;
    private javax.swing.JTextField jTValorTransferir;
    // End of variables declaration//GEN-END:variables

    private void CarregaComboBoxTodos() throws IOException {
        try {
            jCContas.addItem("Selecione uma Conta");
            String url = file.url();
            String login = file.login();
            String password = file.password();
            Connection conn;
            conn = DriverManager.getConnection(url, login, password);//classse de conexao com banco
            PreparedStatement ps = conn.prepareStatement("select conta from conta where conta <> ?");
            ps.setInt(1, conta.getConta());
            ResultSet rs;
            rs = ps.executeQuery();

            while (rs.next()) {
                jCContas.addItem(rs.getString("conta"));
            }
            rs.close();
            conn.close();
        } catch (SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null,
                    "Ocorreu erro ao carregar a Combo Box", "Erro",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(e);
        }

    }

    private void CarregaTabela() throws IOException {

        try {
            String url = file.url();
            String login = file.login();
            String password = file.password();
            Connection con;
            con = DriverManager.getConnection(url, login, password);//classse de conexao com banco
            PreparedStatement ps = (PreparedStatement) con.prepareStatement("select conta_origem, conta_destino, valor, data, hora from transacao where conta=?");
            ps.setInt(1, conta.getConta());
            ps.execute(); // cria o vetor
            ResultSet rs = ps.executeQuery();

            DefaultTableModel model = (DefaultTableModel) jTExtrato.getModel();
            model.setNumRows(0);

            while (rs.next()) {
                model.addRow(new Object[]{
                    //retorna os dados da tabela do BD, cada campo Ã© uma coluna.
                    rs.getString(""+"conta_origem"),
                    rs.getString(""+"conta_destino"),
                    rs.getString(""+"valor"),
                    rs.getString(""+"data"),
                    rs.getString(""+"hora")
                });
            }
            rs.close();
            con.close();
        } catch (SQLException ex) {
            System.out.println("o erro foi " + ex);
        }
    }
}


